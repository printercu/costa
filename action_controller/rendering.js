// Generated by CoffeeScript 1.6.3
(function() {
  var Rendering, lingo, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  lingo = require('lingo');

  module.exports = Rendering = (function(_super) {
    __extends(Rendering, _super);

    function Rendering() {
      _ref = Rendering.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Rendering.extendsWithProto().concern();

    Rendering.ClassMethods = (function() {
      function ClassMethods() {}

      Object.defineProperty(ClassMethods.prototype, 'viewPath', {
        get: function() {
          var matched, mod;
          if (this.hasOwnProperty('_viewPath')) {
            return this._viewPath;
          }
          mod = (matched = /(\w+)Controller/.exec(this.name)) ? lingo.underscore(matched[1]) : '_global';
          return this._viewPath = mod;
        },
        set: function(val) {
          return this._viewPath = val;
        }
      });

      return ClassMethods;

    })();

    Rendering.prototype.render = function(options, callback) {
      return this.renderToString(options, function(result) {
        this.response.send(result);
        return callback.call(this, result);
      });
    };

    Rendering.prototype.renderToString = function() {
      throw 'abstract';
      return this.res.render("" + this.constructor.viewPath + "/" + this.actionName, data);
    };

    Rendering.prototype.defaultRender = function() {
      return this.render.apply(this, arguments);
    };

    return Rendering;

  }).call(this, require('coffee_classkit').Module);

}).call(this);
