// Generated by CoffeeScript 1.6.3
(function() {
  var lingo, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  lingo = require('lingo');

  module.exports = (function(_super) {
    __extends(_Class, _super);

    function _Class() {
      _ref = _Class.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    _Class.extendsWithProto().concern();

    _Class.ClassMethods = (function() {
      function ClassMethods() {}

      Object.defineProperty(ClassMethods.prototype, 'tableName', {
        get: function() {
          var _ref1, _ref2;
          if (this.hasOwnProperty('_tableName')) {
            return this._tableName;
          }
          return this._tableName = !((_ref1 = this.__supper__) != null ? _ref1.constructor : void 0) || ((_ref2 = this.__supper__) != null ? _ref2.constructor.name : void 0) === 'Record' ? lingo.underscore(this.name) : this.__supper__.constructor.tableName;
        },
        set: function(val) {
          return this._tableName = val;
        }
      });

      return ClassMethods;

    })();

    return _Class;

  }).call(this, require('coffee_classkit').Module);

}).call(this);
