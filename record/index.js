// Generated by CoffeeScript 1.6.3
(function() {
  var Record, util,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  util = require('util');

  module.exports = Record = (function(_super) {
    __extends(Record, _super);

    Record.extendsWithProto();

    Record.includeAll(module, {
      prefix: './'
    }, 'attributes', 'model_schema', 'storage', 'callbacks', 'validations', 'persisted_validations');

    Record.exportAttrs('id');

    Record.exportAttrs({
      "for": 'api'
    }, 'errors', '_isPersisted');

    Record["new"] = function(data) {
      return new this(data);
    };

    function Record(data) {
      if (data) {
        util._extend(this, data);
      }
    }

    return Record;

  })(require('coffee_classkit').Module);

}).call(this);
