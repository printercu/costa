// Generated by CoffeeScript 1.6.3
(function() {
  var Redis, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = Redis = (function(_super) {
    __extends(Redis, _super);

    function Redis() {
      _ref = Redis.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Redis.extendsWithProto().concern();

    Redis.include(require('./key_val'));

    Redis.ClassMethods = (function() {
      function ClassMethods() {}

      ClassMethods.prototype.nextId = function(callback) {
        this.kv.incr(this._keySeq('id'), callback);
        return this;
      };

      ClassMethods.prototype.maxId = function(callback) {
        return this.kv.get(this._keySeq('id'), callback);
      };

      ClassMethods.prototype.get = function(id, callback) {
        var key,
          _this = this;
        key = this._key(id);
        this.kv.get(key, function(err, data) {
          var item;
          if (err) {
            return typeof callback === "function" ? callback(err) : void 0;
          }
          try {
            item = JSON.parse(data);
            if (typeof item !== 'object') {
              item = null;
            }
          } catch (_error) {
            err = _error;
            return typeof callback === "function" ? callback(err) : void 0;
          }
          if (item) {
            item.__proto__ = _this.prototype;
            item._isPersisted = true;
          }
          return typeof callback === "function" ? callback(null, item) : void 0;
        });
        return this;
      };

      ClassMethods.prototype.set = function(id, data, callback) {
        var key;
        key = this._key(id);
        data = JSON.stringify(data);
        this.kv.set(key, data, callback);
        return this;
      };

      ClassMethods.prototype["delete"] = function(id, callback) {
        this.kv.del(this._key(id), callback);
        return this;
      };

      ClassMethods.prototype.getMulti = function(ids, callback) {
        var id, keys,
          _this = this;
        if (!ids.length) {
          return setImmediate(function() {
            return callback(null, []);
          });
        }
        keys = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = ids.length; _i < _len; _i++) {
            id = ids[_i];
            _results.push(this._key(id));
          }
          return _results;
        }).call(this);
        this.kv.mget(keys, function(err, items) {
          var item, item_json, result, _i, _len;
          if (err) {
            return typeof callback === "function" ? callback(err) : void 0;
          }
          result = [];
          for (_i = 0, _len = items.length; _i < _len; _i++) {
            item_json = items[_i];
            try {
              item = JSON.parse(item_json);
              if (typeof item !== 'object') {
                item = null;
              }
            } catch (_error) {
              err = _error;
              return typeof callback === "function" ? callback(err) : void 0;
            }
            if (item) {
              item.__proto__ = _this.prototype;
            }
            result.push(item);
          }
          return typeof callback === "function" ? callback(null, result) : void 0;
        });
        return this;
      };

      return ClassMethods;

    })();

    return Redis;

  })(require('coffee_classkit').Module);

}).call(this);
